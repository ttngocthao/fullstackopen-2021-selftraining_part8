{"ast":null,"code":"var _jsxFileName = \"/Users/thaotruong/fullstackopen-2021-selftraining_part8/library/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloClient, HttpLink, InMemoryCache, gql } from '@apollo/client'; //?--> create an instance of a client\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: 'http://localhost:4000'\n}); //?--> create a query\n\nconst query = gql`\n    query {\n        query {\n            allAuthors {\n                name\n                born\n                bookCount\n            }\n        }\n    }\n`; //?--> send the query to the server:\n// client.query({ query })\n//   .then((response) => {\n//     console.log(response.data)\n// })\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/thaotruong/fullstackopen-2021-selftraining_part8/library/frontend/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","HttpLink","InMemoryCache","gql","client","cache","uri","query","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,EAAgDC,GAAhD,QAA2D,gBAA3D,C,CAEA;;AACA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,EAAAA,KAAK,EAAE,IAAIH,aAAJ,EADuB;AAG5BI,EAAAA,GAAG,EAAE;AAHuB,CAAjB,CAAf,C,CAOA;;AACA,MAAMC,KAAK,GAAGJ,GAAI;;;;;;;;;;CAAlB,C,CAWA;AACA;AACA;AACA;AACA;;AAEAL,QAAQ,CAACU,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ApolloClient, HttpLink, InMemoryCache, gql } from '@apollo/client'\n\n//?--> create an instance of a client\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n \n    uri: 'http://localhost:4000'\n \n})\n\n//?--> create a query\nconst query = gql`\n    query {\n        query {\n            allAuthors {\n                name\n                born\n                bookCount\n            }\n        }\n    }\n`\n//?--> send the query to the server:\n// client.query({ query })\n//   .then((response) => {\n//     console.log(response.data)\n// })\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}